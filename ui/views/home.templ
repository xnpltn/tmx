package views

import (
"spreadsheet/spdb/ui/components"
"spreadsheet/spdb/ui/components/forms"
"spreadsheet/spdb/models"
"fmt"
)

templ HomeView(sheets []models.Sheet) {
<h1>Home </h1>
<!-- Button to trigger the modal -->
/*<div class="flex items-center justify-between bg-gray-200 rounded p-5">
  <button type="button" class="text-lg rounded bg-blue-500 px-3 py-2 text-white" onclick="openModal()">Add</button>
</div>
*/
<div id="newSheetContainter" class="container">
  <h2>Available workspaces : { fmt.Sprintf("%d", len(sheets) ) }</h2>
  <div class=" flex items-center justify-center gap-5 rounded bg-gray-200">
    for _, sheet := range sheets {
    @components.WorkspaceContainer(sheet)
    }
  </div>
</div>
<div class="container mx-auto p-4">
  <div class="bg-white rounded-lg shadow-lg p-6">
    <h2 class="text-2xl font-bold mb-4">Create New Sheet</h2>
    @forms.NewSheetForm()
  </div>
</div>
<script>
  let titleCount = 1;

  document.getElementById('add-title').addEventListener('click', function () {
    const container = document.getElementById('titles-container');
    const div = document.createElement('div');
    div.className = 'flex space-x-2 mb-2';
    div.innerHTML = `
        <input type="text" name="titles[${titleCount}][name]" class="w-full p-2 border rounded" placeholder="Title" required>
        <select name="titles[${titleCount}][dataType]" class="w-full p-2 border rounded" required>
          <option value="Text">Text</option>
          <option value="CheckBox">CheckBox</option>
          <option value="Status">Status</option>
          <option value="Tag">Tag</option>
          <option value="Date">Date</option>
          <option value="Label">Label</option>
        </select>
      `;
    container.appendChild(div);
    titleCount++;
  });

  document.getElementById('sheet-form').addEventListener('submit', async function (event) {

    event.preventDefault();
    const formData = new FormData(event.target);
    const titles = [];
    for (let i = 0; i < titleCount; i++) {
      const name = formData.get(`titles[${i}][name]`);
      const dataType = formData.get(`titles[${i}][dataType]`);
      if (name && dataType) {
        titles.push({name: name, dataType: dataType});
      }
    }
    const sheet = {
      name: formData.get('sheet-name'),
      titles: titles
    };
    console.log(sheet);

    // Submit form data to server or handle it as needed
    await submit(sheet)
  });
  async function submit(sheet) {
    try {
      const res = await fetch("/api/newsheet", {
        method: "POST",
        body: JSON.stringify(sheet)
      })
      console.log(res)
    } catch (e) {
      console.log(e)
    }
  }
</script>
}
