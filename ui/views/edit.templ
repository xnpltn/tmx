package views

import (
"spreadsheet/spdb/models"
"spreadsheet/spdb/ui/components"

"spreadsheet/spdb/ui/components/forms"
"fmt"
"time"
)

templ EditView(sheet models.Sheet) {
<div class="container mx-auto p-4">
  <div class="bg-white rounded-lg shadow-lg">
    <!-- Header -->
    <div class="flex justify-between items-center p-4 border-b">
      <div class="flex items-center">
        <button class="px-3 py-1 bg-gray-200 rounded">󰉋</button>
      </div>
      <div class="flex items-center space-x-4">
        <span>Accounts</span>
        <span class="text-gray-500 text-sm">
          last modified: { fmt.Sprintf("%v ago",
          time.Since(sheet.UpdatedAt)) }
        </span>
        @components.Button("px-3 py-1 bg-blue-500 text-white rounded", "+", "")
      </div>
      <div class="flex items-center space-x-4">
        // <img src="avatar.jpg" alt="User Avatar" class="w-8 h-8 rounded-full" />
        <button class="p-2 bg-gray-200 rounded">⚙️</button>
      </div>
    </div>
    <!-- Sidebar -->
    <div class="flex">
      <!-- Main Content -->
      <div class="w-4/5 p-4" x-data="{ openFilter: false, openSort:false }">
        <div class="flex justify-between mb-4">
          <div class="flex space-x-2">
            @components.Button("px-3 py-1 bg-gray-200 rounded", "Filter", "openFilter")
            @components.Button("px-3 py-1 bg-gray-200 rounded", "Sort", "openSort")
          </div>
        </div>
        <!-- Table -->
        <div class="flex items-center justify-center">
          <div class="bg-gray-200 p-3 rounde " x-show="openFilter">
            filter
          </div>
          <div class="bg-gray-200 p-3 rounde " x-show="openSort">
            @forms.SortDataForm(sheet)
          </div>
        </div>
        // templ.ComponentScript{``}
        @components.Table(sheet)
        /*
        <button hx-post="/add-row" hx-trigger="click" hx-target="#table-body" hx-swap="beforeend"
          hx-vals='{"sheetId":1}' hx-on:click={ templ.ComponentScript{Call: fmt.Sprintf("addNewRow(%d)",
          len(sheet.Tittles))} } id="add-row" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded">
          Add
          Row
        </button>
        */
        <button hx-post="/add-row" hx-trigger="click" hx-target="#table-body" hx-swap="beforeend" hx-vals={
          fmt.Sprintf(`{"sheetId":%d}`, sheet.ID) } id="add-row" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded">
          Add
          Row
        </button>
      </div>
    </div>
  </div>
</div>
<script>

  /*
  const table = document.getElementById('data-table').getElementsByTagName('tbody')[0];
  function addNewRow(len) {
    const row = table.insertRow();
    for (let i = 0; i < len; i++) {
      const cell = row.insertCell();
      cell.className = 'p-2 editable';
      cell.contentEditable = 'true';
      cell.setAttribute("hx-swap", "none");
      cell.setAttribute("hx-post", "/api/cell")
      cell.setAttribute("hx-vals", `{"cellData":""}`)
      cell.setAttribute("hx-on:input", "updateCellData(this)")
      cell.textContent = "";

    }
  }
*/
  // get cell data
  function getCellData(e) {
    return e.target.innerText
  }

</script>
}
