package views

import (
"spreadsheet/spdb/models"
"spreadsheet/spdb/ui/components"
"fmt"
"time"
)

templ EditView(sheet models.Sheet) {
<div class="container mx-auto p-4">
  <div class="bg-white rounded-lg shadow-lg">
    <!-- Header -->
    <div class="flex justify-between items-center p-4 border-b">
      <div class="flex items-center">
        <button class="px-3 py-1 bg-gray-200 rounded">󰉋</button>
      </div>
      <div class="flex items-center space-x-4">
        <span>Accounts</span>
        <span class="text-gray-500 text-sm">
          last modified: { fmt.Sprintf("%v ago",
          time.Since(sheet.UpdatedAt)) }
        </span>
        <button class="px-3 py-1 bg-gray-200 rounded">Grid view</button>
        <button class="px-3 py-1 bg-blue-500 text-white rounded">+</button>
      </div>
      <div class="flex items-center space-x-4">
        // <img src="avatar.jpg" alt="User Avatar" class="w-8 h-8 rounded-full" />
        <button class="p-2 bg-gray-200 rounded">⚙️</button>
      </div>
    </div>
    <!-- Sidebar -->
    <div class="flex">
      <!-- Main Content -->
      <div class="w-4/5 p-4">
        <div class="flex justify-between mb-4">
          <div class="flex space-x-2">
            @components.Button("px-3 py-1 bg-gray-200 rounded", "Filter")
            @components.Button("px-3 py-1 bg-gray-200 rounded", "Sort")
          </div>
        </div>
        <!-- Table -->
        <table id="data-table" class="w-full">
          <thead>
            <tr class="bg-gray-100">
              for _, title := range sheet.Tittles {
              <th class="p-2 text-left">{ title.Name }</th>
              }
            </tr>
          </thead>
          <tbody>
            //<td class="p-2 editable" contenteditable="true">example</td>
            for _, row := range sheet.Rows {
            <tr>
              for _, cell := range row.Cells {
              <td id="data-cell" class="p-2 editable" contenteditable="true" hx-swap="none" hx-trigger="input"
                hx-post="/api/cell" hx-vals={ fmt.Sprintf(`js:{value: getCellData(event), rowId:%d, cellId:%d,
                sheetId:%d}`, row.ID, cell.ID, sheet.ID) }>
                ${
                fmt.Sprintf(" %v", cell.Value) }
              </td>
              }
            </tr>
            }
            <!-- More rows will be added here by JavaScript -->
          </tbody>
        </table>
        <button hx-on:click="addNewRow()" id="add-row" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded">
          Add
          Row
        </button>
      </div>
    </div>
  </div>
</div>
<script>
  function addRow(data) {
    const row = table.insertRow();
    /*
    
                  <td class="p-2 editable" contenteditable="true" hx-swap="none" hx-post="/api/cell"
                    hx-vals='{"cellData": ""}' oninput="updateCellData(this)" hx-vals='{"cellData": ""}'
                    oninput="updateCellData(this)">
                    ${
                    fmt.Sprintf(" %v", cell.Value) }
                  </td>
    element.setAttribute('hx-vals', JSON.stringify({ cellData: cellData }))
    */
    Object.keys(data).forEach(key => {
      const cell = row.insertCell();
      cell.className = 'p-2 editable';
      cell.contentEditable = 'true';
      cell.setAttribute("hx-swap", "none");
      cell.setAttribute("hx-post", "/api/cell")
      cell.setAttribute("hx-vals", `{"cellData":""}`)
      cell.setAttribute("hx-on:input", "updateCellData(this)")
      cell.textContent = data[key];
    });

  }

  // get cell data
  function getCellData(e) {
    return e.target.innerText
  }

  // adding new row on the table
  function addNewRow() {
    addRow({
      name: '',
      amountChart: '',
      totalMoney: '',
      platform: '',
      orderTimes: '',
    });
  }

  function calculateValue(e) {
    return e.target.innerText
  }

</script>
}
